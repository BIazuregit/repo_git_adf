{
	"name": "DF CARS",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "SRCFILECARS"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableCARS",
						"type": "DatasetReference"
					},
					"name": "SRCTBLCARS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableCARS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableCARS",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tmake as string,\n\t\tmpg as string,\n\t\tcyl as string,\n\t\tdisp as string,\n\t\thp as string,\n\t\tdrat as string,\n\t\twt as string,\n\t\tqsec as string,\n\t\tvs as string,\n\t\tam as string,\n\t\tgear as string,\n\t\tcarb as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCFILECARS\nsource(output(\n\t\tmake as string,\n\t\tmpg as decimal(18,1),\n\t\tcyl as decimal(18,0),\n\t\tdisp as decimal(18,1),\n\t\thp as decimal(18,0),\n\t\tdrat as decimal(18,2),\n\t\twt as decimal(18,2),\n\t\tqsec as decimal(18,2),\n\t\tvs as decimal(18,0),\n\t\tam as decimal(18,0),\n\t\tgear as decimal(18,0),\n\t\tcarb as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SRCTBLCARS\nSRCFILECARS, SRCTBLCARS lookup(SRCFILECARS@make == SRCTBLCARS@make,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nSelect1 split(isMatch(1),\n\tdisjoint: false) ~> ConditionalSplit1@(EXIST, NOTEXIST)\nDerivedColumn1 alterRow(updateIf(isMatch())) ~> AlterRow1\nConditionalSplit1@EXIST derive(status = 1) ~> DerivedColumn1\nConditionalSplit1@NOTEXIST derive(status = 2) ~> DerivedColumn2\nLookup1 select(mapColumn(\n\t\tmake = SRCFILECARS@make,\n\t\tmpg = SRCFILECARS@mpg,\n\t\tcyl = SRCFILECARS@cyl,\n\t\tdisp = SRCFILECARS@disp,\n\t\thp = SRCFILECARS@hp,\n\t\tdrat = SRCFILECARS@drat,\n\t\twt = SRCFILECARS@wt,\n\t\tqsec = SRCFILECARS@qsec,\n\t\tvs = SRCFILECARS@vs,\n\t\tam = SRCFILECARS@am,\n\t\tgear = SRCFILECARS@gear,\n\t\tcarb = SRCFILECARS@carb\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nAlterRow1 sink(input(\n\t\tmake as string,\n\t\tmpg as decimal(18,1),\n\t\tcyl as decimal(18,0),\n\t\tdisp as decimal(18,1),\n\t\thp as decimal(18,0),\n\t\tdrat as decimal(18,2),\n\t\twt as decimal(18,2),\n\t\tqsec as decimal(18,2),\n\t\tvs as decimal(18,0),\n\t\tam as decimal(18,0),\n\t\tgear as decimal(18,0),\n\t\tcarb as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['make'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nDerivedColumn2 sink(input(\n\t\tmake as string,\n\t\tmpg as decimal(18,1),\n\t\tcyl as decimal(18,0),\n\t\tdisp as decimal(18,1),\n\t\thp as decimal(18,0),\n\t\tdrat as decimal(18,2),\n\t\twt as decimal(18,2),\n\t\tqsec as decimal(18,2),\n\t\tvs as decimal(18,0),\n\t\tam as decimal(18,0),\n\t\tgear as decimal(18,0),\n\t\tcarb as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
		}
	}
}