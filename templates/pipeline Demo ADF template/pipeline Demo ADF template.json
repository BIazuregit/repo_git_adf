{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureBlobStorage1": {
			"type": "string"
		},
		"AzureSqlDatabase1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline Demo ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF SCD",
						"description": "",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF SCD Demo2",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-12T16:04:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF SCD Demo2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF SCD Demo2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel_Sample_data",
								"type": "DatasetReference"
							},
							"name": "ExcelSource"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableDemoADF",
								"type": "DatasetReference"
							},
							"name": "DBDestinationtbl"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTableDemoADF",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableDemoADF",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "LookupPK"
						},
						{
							"name": "isMatching"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "AlterRow2"
						},
						{
							"name": "hashcolumn"
						}
					],
					"script": "source(output(\n\t\tOrderDate as string,\n\t\tRegion as string,\n\t\tRep as string,\n\t\tItem as string,\n\t\tUnits as string,\n\t\tUnitCost as string,\n\t\tTotal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExcelSource\nsource(output(\n\t\tOrderDate as string,\n\t\tRegion as string,\n\t\tRep as string,\n\t\tItem as string,\n\t\tUnits as string,\n\t\tUnitCost as string,\n\t\tTotal as string,\n\t\tkey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DBDestinationtbl\nExcelSource, DBDestinationtbl lookup(ExcelSource@OrderDate == DBDestinationtbl@OrderDate,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupPK\nLookupPK derive(match = isMatch()) ~> isMatching\nisMatching split(match,\n\tdisjoint: false) ~> ConditionalSplit1@(IsMacth, noMatch)\nConditionalSplit1@IsMacth alterRow(updateIf(true())) ~> AlterRow1\nConditionalSplit1@noMatch alterRow(insertIf(true())) ~> AlterRow2\nAlterRow2 derive(key = md5(ConditionalSplit1@noMatch@OrderDate)) ~> hashcolumn\nAlterRow1 sink(input(\n\t\tOrderDate as string,\n\t\tRegion as string,\n\t\tRep as string,\n\t\tItem as string,\n\t\tUnits as string,\n\t\tUnitCost as string,\n\t\tTotal as string,\n\t\tkey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['OrderDate'],\n\tformat: 'table',\n\tmapColumn(\n\t\tRegion = ConditionalSplit1@IsMacth@Region,\n\t\tRep = ConditionalSplit1@IsMacth@Rep,\n\t\tItem = ConditionalSplit1@IsMacth@Item,\n\t\tUnits = ConditionalSplit1@IsMacth@Units,\n\t\tUnitCost = ConditionalSplit1@IsMacth@UnitCost,\n\t\tTotal = ConditionalSplit1@IsMacth@Total,\n\t\tkey,\n\t\tOrderDate = ConditionalSplit1@IsMacth@OrderDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nhashcolumn sink(input(\n\t\tOrderDate as string,\n\t\tRegion as string,\n\t\tRep as string,\n\t\tItem as string,\n\t\tUnits as string,\n\t\tUnitCost as string,\n\t\tTotal as string,\n\t\tkey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel_Sample_data')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableDemoADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_Sample_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ExcelDataSample.xlsx",
						"container": "exceldemo1"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Rep",
						"type": "String"
					},
					{
						"name": "Item",
						"type": "String"
					},
					{
						"name": "Units",
						"type": "String"
					},
					{
						"name": "UnitCost",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableDemoADF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabase1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderDate",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Rep",
						"type": "varchar"
					},
					{
						"name": "Item",
						"type": "varchar"
					},
					{
						"name": "Units",
						"type": "varchar"
					},
					{
						"name": "UnitCost",
						"type": "varchar"
					},
					{
						"name": "Total",
						"type": "varchar"
					},
					{
						"name": "key",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "demoadfOrder"
				}
			},
			"dependsOn": []
		}
	]
}