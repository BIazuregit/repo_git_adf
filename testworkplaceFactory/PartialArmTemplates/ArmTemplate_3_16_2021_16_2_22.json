{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "testworkplaceFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy Data to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputCSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_INC_CARS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF CARS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF CARS",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF CARS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableCARS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "make",
						"type": "nvarchar"
					},
					{
						"name": "mpg",
						"type": "decimal",
						"precision": 18,
						"scale": 1
					},
					{
						"name": "cyl",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "disp",
						"type": "decimal",
						"precision": 18,
						"scale": 1
					},
					{
						"name": "hp",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "drat",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "wt",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "qsec",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "vs",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "am",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "gear",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "carb",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cars"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cars.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "make",
						"type": "String"
					},
					{
						"name": "mpg",
						"type": "String"
					},
					{
						"name": "cyl",
						"type": "String"
					},
					{
						"name": "disp",
						"type": "String"
					},
					{
						"name": "hp",
						"type": "String"
					},
					{
						"name": "drat",
						"type": "String"
					},
					{
						"name": "wt",
						"type": "String"
					},
					{
						"name": "qsec",
						"type": "String"
					},
					{
						"name": "vs",
						"type": "String"
					},
					{
						"name": "am",
						"type": "String"
					},
					{
						"name": "gear",
						"type": "String"
					},
					{
						"name": "carb",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF CARS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "SRCFILECARS"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableCARS",
								"type": "DatasetReference"
							},
							"name": "SRCTBLCARS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTableCARS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableCARS",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Lookup1"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tmake as string,\n\t\tmpg as string,\n\t\tcyl as string,\n\t\tdisp as string,\n\t\thp as string,\n\t\tdrat as string,\n\t\twt as string,\n\t\tqsec as string,\n\t\tvs as string,\n\t\tam as string,\n\t\tgear as string,\n\t\tcarb as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCFILECARS\nsource(output(\n\t\tmake as string,\n\t\tmpg as decimal(18,1),\n\t\tcyl as decimal(18,0),\n\t\tdisp as decimal(18,1),\n\t\thp as decimal(18,0),\n\t\tdrat as decimal(18,2),\n\t\twt as decimal(18,2),\n\t\tqsec as decimal(18,2),\n\t\tvs as decimal(18,0),\n\t\tam as decimal(18,0),\n\t\tgear as decimal(18,0),\n\t\tcarb as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SRCTBLCARS\nSRCFILECARS, SRCTBLCARS lookup(SRCFILECARS@make == SRCTBLCARS@make,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isMatch(1),\n\tdisjoint: false) ~> ConditionalSplit1@(EXIST, NOTEXIST)\nConditionalSplit1@EXIST alterRow(updateIf(isMatch())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tmake as string,\n\t\tmpg as decimal(18,1),\n\t\tcyl as decimal(18,0),\n\t\tdisp as decimal(18,1),\n\t\thp as decimal(18,0),\n\t\tdrat as decimal(18,2),\n\t\twt as decimal(18,2),\n\t\tqsec as decimal(18,2),\n\t\tvs as decimal(18,0),\n\t\tam as decimal(18,0),\n\t\tgear as decimal(18,0),\n\t\tcarb as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['make'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nConditionalSplit1@NOTEXIST sink(input(\n\t\tmake as string,\n\t\tmpg as decimal(18,1),\n\t\tcyl as decimal(18,0),\n\t\tdisp as decimal(18,1),\n\t\thp as decimal(18,0),\n\t\tdrat as decimal(18,2),\n\t\twt as decimal(18,2),\n\t\tqsec as decimal(18,2),\n\t\tvs as decimal(18,0),\n\t\tam as decimal(18,0),\n\t\tgear as decimal(18,0),\n\t\tcarb as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableCARS')]"
			]
		}
	]
}